%This knitr document is called by the knit2pdf call in 5_createMetadata.r
\documentclass{article}
\usepackage[utf8]{inputenc}
\DeclareUnicodeCharacter{B0}{$^{\circ}$}
\usepackage{geometry}
\usepackage{fancyhdr}     %for headers,footers
\usepackage{underscore}  %needed if any text has underscores
\usepackage{rotating}
\usepackage{caption} %for managing table captions

\geometry{letterpaper, top=0.45in, bottom=0.75in, left=0.75in, right=0.75in}
\pagestyle{fancy} \fancyhf{} \renewcommand\headrulewidth{0pt} %strip default header/footer stuff
\captionsetup[table]{labelformat=empty} % stops auto-captioning (numbering)

%add footers
\cfoot{
\small   %small font. The double slashes is newline in fancyhdr
Species distribution model for \Sexpr{as.character(ElementNames$CommName)} (\textit{\Sexpr{as.character(ElementNames$SciName)}}). \\ \Sexpr{sdm.modeler$ProgramName}
}
\rfoot{p. \thepage}


\normalsize %return the font to normal

\begin{document}

\noindent
\begin{minipage}[b]{4.75in}   %everything in this minipage will be adjacent, left of the thermometer
  \LARGE \textit{\Sexpr{as.character(ElementNames[[1]])}} \\ 
  \normalsize Species Distribution Model (SDM) assessment metrics and metadata \\
  Common name: \Sexpr{as.character(ElementNames[[2]])} \\ 
  Date: \Sexpr{format(Sys.Date(), "%d %b %Y")} \\  
  Code: \Sexpr{as.character(ElementNames[[3]])} 
\end{minipage}  \hfill   
\begin{minipage}[b]{2in}   %minipage for thermometer  
<<thermometer1, fig.height=1, fig.width=1, include=FALSE, echo=FALSE>>=
  par(mar=c(0.9,0.2,0.2,0.2))
  if (exists("tss.summ")) {
    temp <- tss.summ$mean
    thermTemp <- vector("list")
    if (temp < .50){
                thermTemp <- c("red", "poor")
                } else if (temp < .80){
                thermTemp <- c("yellow","fair")
                } else {
                thermTemp <- c("green", "good") }
    symbols(1, 1, thermometers=cbind(0.5, 1, temp), inches=.5, fg = thermTemp[[1]],
           xaxt = "n", yaxt = "n", ann = FALSE, bty = "n", pin = c(1.2,1.2) )
    text (1,1, thermTemp[[2]],
        adj = c(0.5,4), cex = .75, col = "black", xpd=NA)
    text (1,1, paste("TSS=",format(round(temp,digits=2)),sep=""),
        adj = c(0.5,6), cex = .75, col = "black", xpd=NA)
    #box("outer","dotted") #show the outline of the fig box when debugging
  } else {
    plot(1,1, col = "white", axes = FALSE)
    box("outer","dotted") #show the outline of the fig box when debugging
    text (1,1, "No evaluation",
        adj = c(0.5,4), cex = .75, col = "black", xpd=NA)
  }
@
  \begin{center}
  \includegraphics{figure/thermometer1-1.pdf} \\     %place it
  ability to find new sites \end{center}
\end{minipage}  

\smallskip
\hrule
\medskip
\noindent
This SDM incorporates the number of known and background locations
indicated in Table 1, modeled with the random forests 
routine \cite{breiman2001, iverson2004} in the R statistical environment 
\cite{liaw2002, r}. The modeling unit was a stream reach, as defined in 
the National Hydrography Dataset Plus \cite{nhd}. Adjacent presence reaches 
were combined into "reach groups". We validated the model by jackknifing 
(also called leave-one-out, see \cite{fielding1997, fielding2002, pearson2007})
by \Sexpr{tolower(as.character(group$JackknType))} for a total of \Sexpr{length(group$vals)} groups.
The statistics in Table 2 report the mean and variance of 
validation statistics for these jackknifing runs.

\smallskip

\small
\begin{minipage}[t]{3in}

\smallskip     %dummy first line to align with next minipage

Table 1. Input statistics. 
<<tableOneLegend, results = "asis", echo=FALSE>>=
cat("Groups = ", group$JackknType,";", sep = "")
@
BG reaches = background reaches; PR reaches = presence reaches 
\smallskip
\begin{center}
<<tableOne, results="asis", echo = FALSE>>=
	summ.table <- data.frame(Name=c("Reach groups","BG reaches","PR reaches"), #note how many reach groups (replace poly and EOs, keep EOs/observations?, # length( unique(df.in2$huc12))))
                         Number=c(length(unique(df.in2$stratum)),
                         nrow(subset(df.full, pres == 0)),
                         nrow(subset(df.full, pres == 1))))
  print(xtable(summ.table),
             floating = FALSE, include.rownames=FALSE)
@
\end{center}

\medskip

Table 2. Validation statistics for jackknife trials. Overall Accuracy = 
Correct Classification Rate, TSS = True Skill Statistic, AUC = 
area under the ROC curve; see \cite{allouche2006, vaughan2005,
fielding2002}.
\smallskip

\begin{center}
<<tableTwo, results="asis", echo = FALSE>>=
  if (exists("tss.summ")) {
    summ.table <- data.frame(Name=c("Overall Accuracy", "Specificity", "Sensitivity",
                                   "TSS", "Kappa", "AUC"), 
                           Mean=c(OvAc.summ$mean, specif.summ$mean,sensit.summ$mean,
                                  tss.summ$mean,Kappa.unw.summ$mean,
                                  auc.summ$mean),
                           SD=c(OvAc.summ$sd, specif.summ$sd,sensit.summ$sd,
                                  tss.summ$sd,Kappa.unw.summ$sd, 
                                  auc.summ$sd),
                           SEM=c(OvAc.summ$sem, specif.summ$sem,sensit.summ$sem,
                                  tss.summ$sem,Kappa.unw.summ$sem, 
                                  auc.summ$sem))
  } else {
    summ.table <- data.frame(Name=c("Overall Accuracy", "Specificity", "Sensitivity",
                                   "TSS", "Kappa", "AUC"),
                             Mean = rep(NA, 6), SD = rep(NA, 6), SEM = rep(NA, 6))
  }
  print(xtable(summ.table), 
              floating=FALSE, include.rownames=FALSE)
@
\end{center}

\medskip
<<checkEvalExists, include=FALSE, echo=FALSE>>=
if (exists("n.var")) {
  txt <- paste0("Validation runs used ",n.var," environmental 
  variables, the most important of ",OriginalNumberOfEnvars,".
  Each tree was built with ",trRes[[1]]$mtry," variables 
  tried at each split (mtry) and ",trRes[[1]]$ntree," trees built.")
} else { 
  txt <- "Validation was not possible for this model (not enough reach groups)." 
}
@

<<EvalTextPrint, results='asis', echo=FALSE>>=
cat(txt)
@
The final model was built using \Sexpr{rf.full$ntree} trees, all presence 
and background reaches, with an mtry of \Sexpr{rf.full$mtry}, and \Sexpr{length(EnvVars$impVal)} environmental variables.

\begin{center}
<<ROCplot, fig.width=2.9, fig.height=1.6, include=FALSE, echo=FALSE>>=
par(mar=c(2.8,2.5,.5,10),   #bottom, left, top, right
    tcl=-0.1,   #tic length
    cex=0.6,     #text size
    mgp=c(1.6,0.4,0) #placement of axis title, labels, line
    )
if (exists("perf")) {
  plot(perf,lwd=2,
          avg="threshold", colorize = TRUE,
          #print.cutoffs.at = c(rf.full.ctoff[2], cutval.rf[2]),
          #text.adj=c(-0.6,1.5), points.pch=19, points.cex=0.8, text.cex=0.8,
          xlab="Avg. false positive rate", ylab="Avg. true positive rate",
          colorkey.relwidth = 0.5,
          colorize.palette=rainbow(256,start=3/6, end=0), colorkey.line = 1,
          colorkey = FALSE
          )
  
    # set the color palette
    rl.colors <- rev(rainbow(256,start=3/6, end=0))
    # find the min and max of the cutoffs, as used in the ROC plot
    rl.max.alpha <- max(unlist(perf@alpha.values))
    rl.min.alpha <- min(unlist(perf@alpha.values))
    # get the y min and max of the ROC plot
    rl.max.y <- max(axTicks(4))
    rl.min.y <- min(axTicks(4))
    # interpolate the cutoffs to the y axis
    rl.alpha.ticks <- approxfun(c(rl.min.y, rl.max.y),
                             c(rl.min.alpha, rl.max.alpha))(axTicks(4))
    # set up a vector the length of colors ranging from min to max values
    rl.col.cutoffs <- rev(seq(rl.min.alpha,rl.max.alpha, length=length( rl.colors )))
    # create a function to do the interpolation in later commands 
    rl.alpha2y <- approxfun(c(min(rl.alpha.ticks), max(rl.alpha.ticks)),
                         c(rl.min.y,rl.max.y))
    # place the axis, using the correct labeling scheme
  axis(at=rl.alpha2y(rl.alpha.ticks),labels=round((rl.alpha.ticks),2), side=4, line=3.5)
    # set up definition for what to display and then apply to y breaks and colors
    rl.display.bool <- (rl.col.cutoffs >= min(rl.alpha.ticks) &
                     rl.col.cutoffs < max(rl.alpha.ticks))
    rl.y.lower <- rl.alpha2y(rl.col.cutoffs)[rl.display.bool]
    rl.colors <- rl.colors[rl.display.bool]
    rl.y.width <- rl.y.lower[2] - rl.y.lower[1]
    rl.y.upper <- rl.y.lower + rl.y.width
    # manually define x locations way off graph to minimize confusion
    rl.x.left <- 1.3
    rl.x.right <- 1.32
    # place the bar, then the legend label
  rect(rl.x.left, rl.y.lower, rl.x.right, rl.y.upper, col=rl.colors, border=rl.colors, xpd=NA)
  mtext("cutoff", side=1, at = c(1.35), line = 0, cex=0.6)
  mtext("legend", side=1, at = c(1.35), line = 1, cex=0.6)
} else {
  plot(0.5,0.5,lwd=0, col = "white", xlim = c(0,1), ylim = c(0,1),
          xlab="Avg. false positive rate", ylab="Avg. true positive rate")
  text(0.5,0.5, "No evaluation")
}
  #clean up
rm(list=ls(pattern="rl."))

@
\includegraphics{figure/ROCplot-1.pdf} %place it    
\end{center}
Figure 1. ROC plot for all \Sexpr{length(group$vals)} validation runs, 
averaged along cutoffs.

\end{minipage}
\hfill \begin{minipage}[t]{3.5in}

\smallskip  %dummy first line to align with previous minipage

<<importanceFig, fig.width=3.0, fig.height=6.75, include=FALSE, echo=FALSE>>=
par(mar=c(3.2,2.5,.5,0.1),   #bottom, left, top, right
    tcl=-0.1,   #tic length
    mgp=c(1.3,0.4,0) #placement of axis title, labels, line
    )
  #get the order for the importance charts
  ord <- rev(order(EnvVars$impVal, decreasing = TRUE)[1:length(EnvVars$impVal)])
  xmin.i <- min(EnvVars$impVal)
  #create importance dot chart
  dotchart(EnvVars$impVal[ord], xlab = expression("lower" %->% "greater"),
    xlim = c(xmin.i, max(EnvVars$impVal)), labels = EnvVars$fullName[ord],
    cex = 0.62     #character size
  )
  mtext("importance", side = 1, line = 2, cex = 0.62)
@
\begin{center}
\includegraphics{figure/importanceFig-1.pdf}    %place it
\end{center}
Figure 2. Relative importance of each environmental variable based on the full
model using all sites as input. See Table 4 for variable descriptions.

\end{minipage} 

\normalsize
\pagebreak

<<pPlotFig, fig.width=7.0, fig.height=6.5, include=FALSE, echo=FALSE>>=
par(tcl=-0.2,   #tic length
    cex=0.6,     #text size
    mgp=c(1.6,0.4,0) #placement of axis title, labels, line
    )

# layout(matrix(c(17,2,4,6,8,17,1,3,5,7,17,10,12,14,16,17,9,11,13,15), 
# 		nrow = 4, ncol = 5, byrow = TRUE), 
# 		widths = c(0.15,1,1,1,1),heights=c(1,3,1,3))
layout(matrix(c(19,2,4,6,20,19,1,3,5,20,19,8,10,12,20,19,7,9,11,20,19,14,16,18,20,19,13,15,17,20), 
		nrow = 6, ncol = 5, byrow = TRUE), 
		widths = c(0.05,1,1,1,0.1),heights=c(1,4,1,4,1,4))

pres.dat <- subset(df.full, pres==1)
abs.dat <- subset(df.full, pres==0)

for (plotpi in 1:length(pPlots)){
    par(mar=c(3,2,0,0.5))
  	if(is.character(pPlots[[plotpi]]$x)){
		barplot(pPlots[[plotpi]]$y, width=rep(1, length(pPlots[[plotpi]]$y)), col="grey",
                              xlab = pPlots[[plotpi]]$fname, ylab = NA,
                              names.arg=pPlots[[plotpi]]$x, space=0.1,
							  cex.names=0.7, las=2)	
	plot(1,1,axes=FALSE, type="n", xlab=NA, ylab=NA) #skip density plots if pPlot is barplot
	} else {
	plot(pPlots[[plotpi]]$x, pPlots[[plotpi]]$y,
		type = "l",
		xlab = pPlots[[plotpi]]$fname, ylab=NA)
	pres.dens <- density(pres.dat[,pPlots[[plotpi]]$gridName])
	abs.dens <- density(abs.dat[,pPlots[[plotpi]]$gridName])
	par(mar=c(0,2,0.5,0.5))
	plot(pres.dens, xlim=c(min(pPlots[[plotpi]]$x), 
					max(pPlots[[plotpi]]$x)),
					ylim=c(0,max(c(abs.dens$y,pres.dens$y))),
					main=NA,xlab=NA,ylab=NA,
					axes=FALSE, col="blue", lwd=2
					)
	lines(abs.dens, col="red")
	}
}
  mtext("log of fraction of votes", side = 2, line = -1, outer=TRUE, cex = 0.7)
@
\includegraphics{figure/pPlotFig-1.pdf} \\   %place them, then line break
Figure 3. Partial dependence plots for the \Sexpr{as.character(length(pPlots))} environmental variables with the 
most influence on the model. Each plot shows the effect 
of the variable on the probability of appropriate habitat with the 
effects of the other variables removed \cite{liaw2002}. Peaks in the line indicate 
where this variable had the strongest influence on predicting 
appropriate habitat. The distribution of each category (thin red = BG reaches, 
thick blue = PR reaches) is depicted at the top margin. 

\medskip
Species distribution models map places of similar environmental
conditions to the submitted locations (PR reaches). No model will ever depict sites where
a targeted element will occur with certainty, it can \textit{only} depict locations it interprets
as appropriate habitat for the targeted element. SDMs can be used in many ways and the 
depiction of appropriate habitat should be varied depending on intended use. For targeting
field surveys, an SDM may be used to refine the search area; users should always employ
additional GIS tools to further direct search efforts. A lower threshold depicting additional reaches may be appropriate to use in this case. For a more conservative depiction of suitable habitat that shows fewer reaches, a higher threshold may be more appropriate. Different thresholds for this model (full model) are described in Table 3.

\pagebreak
\noindent
Table 3. Thresholds calculated from the final model. For discussions of these different thresholds
see \cite{LiuEtAl2005, LiuEtAl2015}. The Value column reports the threshold; Pct indicates the percentage of PR reaches predicted having suitable habitat. Total numbers of PR reaches and contiguous PR reach groups used in the final model are reported in Table 1.

\smallskip
\begin{center}
<<tableThree, results="asis", echo = FALSE>>=
  tbl <- sdm.thresh.table
  #tbl$Citation <- gsub("(^.*)","\\\\cite{\\1}",sdm.thresh.table$Citation)
  print(xtable(tbl, digits = 3, align = c("r","p{2in}","r","r","p{3.3in}")), 
              floating=FALSE, include.rownames=FALSE)
@
\end{center}

\medskip
\noindent
<<customComments, results="asis", echo = FALSE>>=
if(nrow(sdm.customComments.subset) > 0){
  {cat(sdm.customComments.subset$comments)}
}
@

\medskip
<<mapFig, include = FALSE, echo = FALSE, dev='png',fig.height=5, fig.width=7, dpi = 300>>=

#equal-width class intervals
plotvar <- results_shape@data$prbblty
nclr <- 5
plotclr <- brewer.pal(nclr,"BuPu")
class <- classIntervals(plotvar, nclr, style="equal", dataPrecision = 2)
colcode <- findColours(class, plotclr)
results_shape$colcode <- colcode
par(mar=c(2,2,2,2.5), #bottom, left, top, right
    cex=0.9)    #text size

# set up plot based on study area extent (unless huc region defined)
if (!is.null(huc_level)) plot(results_shape, col = NA, axes = TRUE) else
  plot(spTransform(studyAreaExtent, CRSobj = results_shape@proj4string), col = NA, border = NA, axes = TRUE)

if (!is.null(nm_aquaArea)) {
  # plot aqua area polygons by mean value of reaches in area
  aqua.pred <- do.call(data.frame, aggregate(results_shape$prbblty,
                                             by = list(results_shape$wacomid),
                                             FUN = function(x) c(mn = mean(x, na.rm = TRUE), n = length(x))))
  colnames(aqua.pred) <- c("comid","pred","count")
  area.wb.pred <- sp::merge(aquaPolys, aqua.pred, by = "comid")
  area.wb.pred$colcode <- plotclr[findInterval(area.wb.pred$pred, class$brks)]

  plot(area.wb.pred, col = area.wb.pred$colcode, border = NA, add = TRUE)
}

# plot(results_shape, col=results_shape$colcode, lwd = 0.15*results_shape$strord, add=T) # original plotting
# orderer plotting (plotting order based on color)
for (i in 1:nclr) {
  sub <- results_shape[results_shape$colcode == plotclr[i],]
  plot(sub, col=sub$colcode, lwd = 0.14*sub$strord, add=T)
}

plot(spTransform( referenceBoundaries[!referenceBoundaries$STATE_NAME %in% studyAreaExtent$STATE_NAME,]
                  , CRSobj = results_shape@proj4string), add=T, border="gray50", lwd=0.3)
plot(spTransform( studyAreaExtent
                  , CRSobj = results_shape@proj4string), add=T, border="black", lwd=0.7)
#title(main="Creek Heelsplittler" ) # sub=" Equal-Width Class Intervals"
legend("topleft", legend=names(attr(colcode, "table")),
    col=attr(colcode, "palette"), cex=0.8, bty="o", lwd = 4, bg = "white")
box()
@

\includegraphics{figure/mapFig-1.png}    
Figure 4. A generalized view of the model predictions throughout the study area. State boundaries are shown in grey. The state(s) included in the model study area (\Sexpr{paste(studyAreaExtent$STATE_NAME, collapse = ", ")}) are outlined in black. 

\pagebreak
This distribution model would not have been possible without data sharing among organizations. The following organizations provided data:
\begin{itemize}
    \setlength{\itemsep}{0pt}
    \setlength{\parskip}{0pt}
    \setlength{\parsep}{0pt}
<<DataSourcesList, results="asis", echo = FALSE>>=
for(i in 1:length(sdm.dataSources$ProgramName)){
  x <- paste("\\item ", sdm.dataSources$ProgramName[[i]], "\n", sep = "")
  y <- sub("&", "\\\\&", x) #escape ampersands if there are any - special character in latex
  cat(y)
  #cat(paste("\\item ", sdm.dataSources$ProgramName[[i]], "\n", sep = ""))
}
@
\end{itemize}

\medskip
This model was built using a methodology developed through collaboration among the Florida Natural Areas Inventory, New York Natural Heritage Program, Pennsylvania Natural Heritage Program, and Virginia Natural Heritage Program. It is one of a suite of aqautic species distribution models developed using the same methods, scripts, and environmental data sets. Our goal was to be consistent and transparent in our methodology, validation, and output.

\medskip
\noindent
Please cite this document and its associated SDM as: \\
\Sexpr{sdm.modeler$ProgramName}. \Sexpr{format(Sys.Date(), "%Y")}. Species distribution model for \Sexpr{as.character(ElementNames$CommName)} (\textit{\Sexpr{as.character(ElementNames$SciName)}}). Created on \Sexpr{format(Sys.Date(), "%d %b %Y")}. \Sexpr{sdm.modeler$FullOrganizationName}, \Sexpr{sdm.modeler$City}, \Sexpr{sdm.modeler$State}.

\medskip
\noindent
References
\small
\renewcommand{\refname}{\vskip -40 pt} %kill the header on the bibliography
\begin{thebibliography}{99}\setlength{\itemsep}{-4pt}
  \bibstyle{biblatex}
  \bibitem{breiman2001} Breiman, L. 2001. Random forests. Machine Learning 45:5-32.
  \bibitem{iverson2004} Iverson, L. R., A. M. Prasad, and A. Liaw. 2004. 
    New machine learning tools for predictive vegetation mapping after 
    climate change: Bagging and Random Forest perform better than Regression 
    Tree Analysis. Landscape ecology of trees and forests.Proceedings of the 
    twelfth annual IALE (UK) conference, Cirencester, UK, 21-24 June 2004 317-320.
  \bibitem{liaw2002} Liaw, A. and M. Wiener. 2002. Classification and 
    regression by randomForest. R News 2:18-22. Version \Sexpr{packageDescription("randomForest")$Version}.
  \bibitem{r} R Core Team. 2016. R: A language and environment for statistical computing. 
    R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. \Sexpr{R.version.string}.
  \bibitem{nhd} U.S. Environmental Protection Agency (USEPA) and the U.S. Geological Survey (USGS). 2012. 
    National Hydrography Dataset Plus - NHDPlus. Version 2. http://www.epa.gov/waters.
  \bibitem{fielding1997} Fielding, A. H. and J. F. Bell. 1997. 
    A review of methods for the assessment of prediction errors in 
    conservation presence/absence models. Environmental Conservation 24:38-49.
  \bibitem{fielding2002} Fielding, A. H. 2002. What are the appropriate
    characteristics of an accuracy measure? Pages 271-280 in Predicting Species
    Occurrences, issues of accuracy and scale. J. M. Scott, P. J. Helglund, M. 
    L. Morrison, J. B. Haufler, M. G. Raphael, W. A. Wall, F. B. Samson, eds. Island Press, Washington.
  \bibitem{pearson2007} Pearson, R.G. 2007. Species Distribution Modeling for 
    Conservation Educators and Practitioners. Synthesis. 
    American Museum of Natural History. Available at http://ncep.amnh.org.
  \bibitem{allouche2006} Allouche, O., A. Tsoar, and R. Kadmon. 2006. 
    Assessing the accuracy of species distribution models: prevalence, 
    kappa and the true skill statistic (TSS). Journal of Applied Ecology 43:1223-1232.
  \bibitem{vaughan2005} Vaughan, I. P. and S. J. Ormerod. 2005. The continuing 
    challenges of testing species distribution models. 
    Journal of Applied Ecology 42:720-730.
  \bibitem{LiuEtAl2005} Liu, C., P. M. Berry, T. P. Dawson, and R. G. Pearson. 2005. 
    Selecting thresholds of occurrence in the prediction of species distributions. 
    Ecography 28:385–393.
  \bibitem{LiuEtAl2015} Liu, C., G. Newell, and M. White. 2015. On the selection of 
    thresholds for predicting species occurrence with presence-only data. Ecology and 
    Evolution 6:337–348. 
  \bibitem{streamcat} Hill, R. A., M. H. Weber, S. G. Leibowitz, A. R. Olsen, and D. J. Thornbrugh. 
    The Stream-Catchment (StreamCat) Dataset: A Database of Watershed Metrics for the Conterminous United States. 
    2016. Journal of the American Water Resources Association (JAWRA) 52:120-128.
\end{thebibliography}

\pagebreak
\noindent
Table 4. Descriptions for environmental variables included in model. Variables were derived from the StreamCat \cite{streamcat} and National Hydrography Dataset, Plus \cite{nhd} datasets.
\begin{center}
<<tableFour, results="asis", echo = FALSE>>=
  # For variable descriptions, get variable name, source, description (3 columns)
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- c(0)
addtorow$command <- c(paste("\\hline \n","\\hline \n",sep=""))
print(xtable(sdm.var.info, label = NULL), # caption = "Table 4. Descriptions for environmental variables included in model."),
      include.rownames=FALSE, scalebox = 0.7, #floating = TRUE, #floating.environment = "sidewaystable",
      #caption.placement = "top", 
      sanitize.text = force, add.to.row = addtorow)
@
\end{center}

\end{document}
